#
# Actions...
#
MENU_SYSTEM=System
MENU_PROJECT=Project
MENU_RECENT=Recent files
MENU_HELP=Help
NEW=New
OPEN=Open...
SAVE=Save
SAVE_AS=Save As...
EXIT=Exit
COMPILE=Compile...
RUNEXE=Run the exe...
ABOUT=About...
#
# Texts from the panels...
#
SKELETONCHOOSER_LABEL=Skeleton Chooser
SKELETONCHOOSER_HELP=Choose your skeleton according to the properties you wish to set up for your executable binary. Read carefully the description of the wrapper, and choose it according to your needs relative to the applications.
EXECUTABLE_LABEL=Executable Binary
EXECUTABLE_HELP=This is the name given to the executable binary.<br>It must end with the ".exe" suffix. For instance, <tt>myprogram.exe</tt> is just fine.
CURRENTDIR_LABEL=Current Directory
CURRENTDIR_HELP=Selects the directory to be set as "current directory" when the application is launched. <p>Leave it empty to keep the current directory unmodified.<p>Typical use of this option is to modify the current path for executable located in a <tt>bin</tt> sub-directory, but the program expects to be launched from the root directory of the application.<p><b>WARNING</b>: Unlike the other files or directory options, which are all relative to the project file, this value is always relative to the generated executable location. That is, if you set ".." or "an\\other\\dir" here, the generated wrapper will change to this directory from <u>its</u> current own current directory.
SKELETONPROPERTIES_LABEL=Skeleton Properties
SKELETONPROPERTIES_HELP=The table above shows the properties associated to the selected skeleton. Change the values of the properties to customize the behaviour of the native executable wrapper generated.
ICONLOCATION_LABEL=Executable Icon
ICONLOCATION_HELP=Optionnally, you can select an icon to be compiled with the executable. This icon is typically used by the operating system to represent the file.<p>You should prefer .ICO files, as this is the format natively used for Win32 executable images, but <tt>GIF</tt>, <tt>JPEG</tt>, or <tt>PNG</tt> files should work fine, at the expense of an image quality decrease.
ARGUMENTS_LABEL=Application Arguments
ARGUMENTS_HELP=Arguments can be passed to the application at launch time. This option allows you to specify default arguments. The expected behaviour of the wrappers is to use those arguments only if none are passed by the user (in other words, they are overloaded by manual arguments).
EMBEDDEDJAR_LABEL=Embedded jar
EMBEDDEDJAR_HELP=You can embed a jar file into the compiled executable. This jar file is extracted each time the executable binary is launched. This is typically used to create a single binary that contains everything (for instance for an installer).
EMBEDDEDJAR_CHECKBOX=Use an embedded jar
CLASSPATH_LABEL=Classpath
CLASSPATH_HELP=Specify here the classpath used by the java application.<p>You can select jar or zip files, but also directories.
MINVERSION_LABEL=Minimum JVM Version
MINVERSION_HELP=Specify here the minimum java version that your application needs to run properly.<p>For instance, <tt>1.2</tt> or <tt>1.4.2</tt> should be fine.
MAXVERSION_LABEL=Maximum JVM Version
MAXVERSION_HELP=Specify here the minimum java version that your application needs to run properly.<p>Most of the time, you won't need to set anything here because Java ensure a very good backward compatibility. However, in some specific cases, you may need to target an older VM.<p><b>NOTE</b>: To limit your application to using JVM, say, 1.2, it is best to specify 1.2.999 as the maximum. This is because users may have a 1.2.x installed (1.2 is equivalent to 1.2.0 for JSmooth).
MAINCLASS_LABEL=Main class
MAINCLASS_HELP=Choose the main class, among all the classes available in the classpath.
JVMBUNDLE_LABEL=JVM Bundle
JVMBUNDLE_CHECKBOX=Use a JVM bundled with your application
JVMBUNDLE_HELP=Use this option only if you intend to bundle a full JVM with your application distribution. This option specifies the directory where JSmooth should be able to find a full-featured JVM.<p>For instance, people often distribute a Java Virtual Machine under a <tt>jre</tt> or a <tt>java</tt> sub-directory of the distribution root, as thus this is the value expected here.
JVMSEARCH_LABEL=JVM Search Sequence
JVMSEARCH_HELP=This is where you can specify the order in which the JVM available are looked for.<p>The default is to search first in the Windows registry, then in standard environment variables, then in the system Path, then check if JView is installed.<p>The default should be fine for most users, but you can customize this search order by moving the elements up or down (preferred element are on top).
MAXMEMORY_LABEL=Maximum Memory
MAXMEMORY_HELP=The maximum memory that the JVM is allowed to allocate. The default depends on the JVM implementation, but a common value is 64MB. One should typically change it to a higher number for applications that consume lot of memory.
UNIT_MB=MB
UNIT_KB=KB
UNIT_BYTE=B
INITIALMEMORY_LABEL=Initial Memory Allocation
INITIALMEMORY_HELP=JVMs often start with a small memory allocation. If your application allocates a lot of memory during the startup, increasing the initial memory allocated by the VM can dramatically speed up the launch.
JAVAPROP_LABEL=Java Properties
JAVAPROP_HELP=You can specify environment variable that are passed to the Java Virtual Machine at launch time.<p>Such variables are are typically accessed with the <tt>System.getProperty()</tt> method.
JAVAPROP_DIALOG_TITLE=Java Property Edition
JAVAPROP_DIALOG_LABEL=Property
JAVAPROP_NAME=Name
JAVAPROP_VALUE=Value
JAVAPROP_DIALOG_HELP=Java properties are name/value pairs that are passed to the JVM, and are accessible by java applications using the <tt>System.getProperty()</tt> method.<p>Additionally, in the <tt>Value</tt> field, you can set specific values:<p><ul><li>Environment Variable: If you pass a string of the form <tt>%ENV%</tt> in the value field of the property, the wrappers will replace the string with the content of the ENV environment variable.<li>JSmooth can also makes some special variable accessible for your application: <tt>${EXECUTABLEPATH}</tt>, <tt>${EXECUTABLENAME}</tt>, <tt>${COMPUTERNAME}</tt>, <tt>${VMSELECTION}</tt>, <tt>${VMSPAWNTYPE}</tt>.<p>Please refer to the documentation for further details.
COMPILATION_DIALOG_TITLE=Compilation Dialog
#
# Misc texts
#
UNKNOWN_SKEL=Selected skeleton is unknown.
