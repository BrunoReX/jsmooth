<project name="jsmoothgen" default="jar" basedir=".">

  <!-- set here the properties specific to your computer      -->
  <!-- see the README.txt file for additional information     -->
  <!-- DO NOT SKIP THIS PART! REALLY! IT WON'T WORK OTHERWISE -->
  <property name="JDKDIR" value="c:\Program Files\j2sdk_nb\j2sdk1.4.2"/>
  <property name="RM" value="CMD /C DEL"/>

  <!-- Values below should be standard, but check it anyway -->
  <!-- Also make sure that the bin folder of MINGW is in your PATH -->
  <property name="mingw-make" value="mingw32-make.exe"/>
  <property name="mingw-strip" value="strip.exe"/>

  <!-- What's below is  optional (needed only if you build a dist) -->
  <property name="FOP" value="c:/Programs/fop-0.20.5\fop.bat"/>
  <property name="DOCBOOKBASE" value="c:\programs\docbook-xsl-1.62.0"/>

 <!-- set here the properties specific the release --> 

  <property name="VERSION" value="0.9.7"/>

  <!-- You should need to modify the properties below -->

  <property environment="env"/>
  <property name="src" value="src"/>
  <property name="tmp" value="tmp"/>
  <property name="docs" value="docs"/>

  <property name="anttask-src" value="ant"/>
  <property name="classes" value="classes"/>
  <property name="jsmoothjar" value="jsmoothgen.jar"/>
  <property name="jsmoothjar-ant" value="jsmoothgen-ant.jar"/>
  <property name="ant.jar" value="${env.ANT_HOME}/lib/ant.jar"/>

  <property name="distbase" value="dist"/>
  <property name="dist" value="${distbase}/jsmooth-${VERSION}"/>

  <path id="anttask-compile.class.path">
    <pathelement path="${ant.jar}"/>
    <pathelement path="${jsmoothjar}/"/>
    <pathelement path="lib/JimiProClasses.zip"/>
    <pathelement path="lib/jox116.jar"/>
    <pathelement path="lib/dtdparser113.jar"/>
  </path>

  <path id="anttask.class.path">
    <pathelement path="${ant.jar}"/>
    <pathelement path="${jsmoothjar-ant}/"/>
    <pathelement path="lib/JimiProClasses.zip"/>
    <pathelement path="lib/jox116.jar"/>
    <pathelement path="lib/dtdparser113.jar"/>
  </path>

  <path id="jsmooth.class.path">
      <fileset dir="lib">
        <include name="**/*.jar"/>
      </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${classes}"/>
  </target>

  <target depends="init" name="compile">
    <!-- Compile the java code from ${src} into ${classes} -->
    <echo>Compiling the application from ${src}</echo>
    <javac deprecation="yes" destdir="${classes}" srcdir="${src}" debug="true">
       <classpath refid="jsmooth.class.path"/>
    </javac>
  </target>

  <target name="docs" depends="init">
    <!-- Compile the java code from ${src} into ${classes} -->

    <xslt basedir="${docs}" destdir="${docs}"
       in="${docs}/jsmooth-doc.xml"
       out="${docs}/jsmooth-doc.html"
       style="${DOCBOOKBASE}/html/docbook.xsl" >
 
        <param name="admon.graphics" expression="1"/>
        <param name="section.autolabel" expression="1"/>
        <param name="section.label.includes.component.label" expression="1"/>
        <param name="chunk.section.depth" expression="2"/>
  
    </xslt>

    <xslt basedir="${docs}" destdir="${docs}"
       in="${docs}/jsmooth-doc.xml"
       out="${docs}/jsmooth-doc.fo"
       style="${DOCBOOKBASE}/fo/docbook.xsl" >
          <param name="admon.graphics" expression="1"/>
          <param name="section.autolabel" expression="1"/>
         <param name="section.label.includes.component.label" expression="1"/>
    </xslt>

    <exec executable="${FOP}" dir="${docs}">
        <arg value="jsmooth-doc.fo"/>
        <arg value="jsmooth-doc.pdf"/>
    </exec>

  </target>

  <target depends="compile" name="jar">
    <!-- Compile the java code from ${src} into ${classes} -->
    <copy todir="classes/icons">
      <fileset dir="src/icons"/>
    </copy>
    <copy todir="classes/locale">
      <fileset dir="src/locale"/>
    </copy>
    <jar basedir="classes" jarfile="${jsmoothjar}" manifest="src\MANIFEST.txt"/>
  </target>

  <target depends="compile" name="anttask">
    <!-- Compile the java code from ${src} into ${classes} -->
    <javac deprecation="yes" destdir="${classes}" srcdir="${anttask-src}" debug="true">
       <classpath refid="anttask-compile.class.path"/>
    </javac>
    <unjar src="lib/jox116.jar" dest="${classes}"/>
    <unjar src="lib/dtdparser113.jar" dest="${classes}"/>
    <jar basedir="classes" jarfile="${jsmoothjar-ant}" manifest="src\MANIFEST.txt"/>
  </target>

    <!-- 
         Builds the distribution file for jsmooth.
      -->

  <target depends="" name="test">
    <ant antfile="build.xml" dir="skeletons/simplewrap/samplejar/" target="dist"/>
    <ant antfile="build.xml" dir="skeletons/consolewrapper/samplejar/" target="dist"/>
  </target>

  <target depends="" name="dist">
    
    <tstamp/>
    <buildnumber/>
    <property name="RELEASEINFO" value="Build ${DSTAMP}-${build.number}"/>

    <echo>Building release ${VERSION} - ${RELEASEINFO}</echo>

    <!-- Clean up the directories -->
    <antcall target="clean"/>

    <!-- Clean up the distribution directory  -->

    <delete dir="${distbase}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/docs"/>
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${dist}/sample"/>
    <mkdir dir="${dist}/skeletons"/>

    
    <!-- Compile the classes and create the jars           -->
    <!-- The sources are copied in a temp dir, so that     -->
    <!-- the VERSION and RELEASEINFO data can be replaced  -->

    <delete dir="${tmp}"/>
    <mkdir dir="${tmp}"/>
    <copy todir="${tmp}/src">
      <fileset dir="src"/>
    </copy>
    <replace token="@{VERSION}@" dir="${tmp}/src" value="${VERSION}">
      <include name="**/*.java"/>
    </replace>
    <replace token="@{RELEASEINFO}@" dir="${tmp}/src" value="${RELEASEINFO}">
      <include name="**/*.java"/>
    </replace>

    <antcall target="jar">
      <param name="src" value="${tmp}/src"/>
    </antcall>

    <antcall target="anttask">
      <param name="src" value="${tmp}/src"/>
    </antcall>

    <!-- Copy the jsmooth ant library -->
    <copy todir="${dist}/lib" file="jsmoothgen.jar"/>
    <copy todir="${dist}/lib" file="jsmoothgen-ant.jar"/>
    <copy todir="${dist}/lib" file="lib/jox116.jar"/>
    <copy todir="${dist}/lib" file="lib/dtdparser113.jar"/>
    <copy todir="${dist}/lib" file="lib/l2fprod-common.jar"/>

    <!-- Now that the ANT task is available, register it  -->

    <taskdef name="jsmoothgen"
        classname="net.charabia.jsmoothgen.ant.JSmoothGen"
        classpathref="anttask.class.path"/>

    <!-- Builds the documentation -->
    <copy todir="${tmp}/docs">
      <fileset dir="docs"/>
    </copy>
    <replace token="@{VERSION}@" dir="${tmp}/docs" value="${VERSION}">
      <include name="**/*.xml"/>
      <include name="**/*.txt"/>
    </replace>
    <replace token="@{RELEASEINFO}@" dir="${tmp}/docs" value="${RELEASEINFO}">
      <include name="**/*.xml"/>
      <include name="**/*.txt"/>
    </replace>

    <antcall target="docs">
      <param name="docs" value="${tmp}/docs"/>
    </antcall>

    <copy todir="${dist}/docs">
      <fileset dir="${tmp}/docs">
        <include name="**/*.pdf"/>
      </fileset>
      <fileset dir="${tmp}/docs">
        <include name="**/*.html"/>
      </fileset>
    </copy>
    <copy todir="${dist}/docs/images">
      <fileset dir="${tmp}/docs/images"/>
    </copy>
    <copy todir="${dist}" file="${tmp}/docs/readme.txt"/>
    <copy todir="${dist}" file="${tmp}/docs/license.txt"/>
    <copy todir="${dist}" file="Changelog"/>

    <!-- Compile the wrappers -->
    <ant antfile="build.xml" dir="skeletons/simplewrap/samplejar/" target="dist"/>
    <ant antfile="build.xml" dir="skeletons/consolewrapper/samplejar/" target="dist"/>

    <mkdir dir="${dist}/skeletons/windowed-wrapper"/>
    <mkdir dir="${dist}/skeletons/console-wrapper"/>
    <antcall target="compileskels">
      <param name="skelflags" value=""/>
    </antcall>
    <copy todir="${dist}/skeletons/windowed-wrapper" file="skeletons/simplewrap/jwrap.exe"/>
    <copy todir="${dist}/skeletons/windowed-wrapper" file="skeletons/simplewrap/description.skel"/>
    <copy todir="${dist}/skeletons/console-wrapper" file="skeletons/consolewrapper/consolewrapper.exe"/>
    <copy todir="${dist}/skeletons/console-wrapper" file="skeletons/consolewrapper/description.skel"/>
    <exec executable="${mingw-strip}" dir="${dist}/skeletons/console-wrapper">
        <arg value="consolewrapper.exe"/>
    </exec>
    <exec executable="${mingw-strip}" dir="${dist}/skeletons/windowed-wrapper">
        <arg value="jwrap.exe"/>
    </exec>

    <!-- Builds the jsmooth executable -->
    <jsmoothgen project="jsprj/jsmoothgen.jsmooth" skeletonroot="${dist}/skeletons"/>
    <jsmoothgen project="jsprj/jsmoothcmd.jsmooth" skeletonroot="${dist}/skeletons"/>
    <ant antfile="build.xml" dir="sample" target="dist"/>
    <jsmoothgen project="jsprj/prooftest.jsmooth" skeletonroot="${dist}/skeletons"/>

    <copy todir="${dist}" file="jsmoothgen.exe"/>
    <copy todir="${dist}" file="jsmoothcmd.exe"/>
    <copy todir="${dist}" file="proof-test.exe"/>
    <copy todir="${dist}/sample">
      <fileset dir="sample"/>
    </copy>

  </target>

   <target name="compileskel" depends="">
     <exec executable="${mingw-make}" dir="skeletons/${skelname}">
       <arg value="-f"/>
       <arg value="Makefile.win"/>
       <arg value="clean"/>
       <arg value="all"/>
       <arg value='CUSTOMFLAGS=${skelflags}'/>
       <arg value='"JDK=${JDKDIR}"'/>
       <arg value='"RM=${RM}"'/>
     </exec>
   </target>

   <target name="compileskels" depends="">
     <ant dir="skeletons/simplewrap/samplejar" /> 
     <ant dir="skeletons/consolewrapper/samplejar" /> 

    <antcall target="compileskel">
      <param name="skelname" value="commonjava"/>
      <param name="skelflags" value="${skelflags}"/>
    </antcall>
    <antcall target="compileskel">
      <param name="skelname" value="consolewrapper"/>
      <param name="skelflags" value="${skelflags}"/>
    </antcall>
    <antcall target="compileskel">
      <param name="skelname" value="simplewrap"/>
      <param name="skelflags" value="${skelflags}"/>
    </antcall>
   </target>

  <target name="clean">
    <delete dir="${classes}"/>
  </target>

  <target name="run" depends="jar">
     <java classname="net.charabia.jsmoothgen.application.gui.MainFrame" fork="yes" >
       <classpath refid="jsmooth.class.path"/>
       <classpath>
          <pathelement path="${jsmoothjar}"/>
       </classpath>
     </java>
  </target>


  <target name="runskeletoneditor" depends="jar">
     <java classname="net.charabia.jsmoothgen.skeleton.SkeletonEditor" fork="yes" >
       <classpath refid="jsmooth.class.path"/>
       <classpath>
          <pathelement path="${jsmoothjar}"/>
       </classpath>
     </java>
  </target>

	<target name="swt-tests" depends="jar">
		<java
		 	classname="net.charabia.jsmoothgen.application.swtgui.tests.NewProjectWizardVisualTests"
		 	fork="yes" >
		 	
			<classpath refid="jsmooth.class.path"/>
			<classpath>
				<pathelement path="${jsmoothjar}"/>
			</classpath>
		</java>
	</target>

</project>

